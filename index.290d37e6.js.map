{"mappings":"IAwBAA,EAAe,C,IAhBHC,IACV,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,G,CACvC,MAAOK,GACP,OAAO,I,QAZE,CAACL,EAAKM,KACjB,IACEH,aAAaI,QAAQP,EAAKC,KAAKO,UAAUF,G,CACzC,MAAOD,GACP,OAAO,I,UAYIL,IACb,IACE,OAAOG,aAAaM,WAAWT,E,CAC/B,MAAOK,GACP,OAAO,I,IClBX,MAAMK,EAAO,CACXC,KAAMC,SAASC,cAAc,gB,IAKfC,EAAhB,IAAIC,EAAwC,QAA5BD,EAAAf,EAAQiB,IAFA,sBAEoB,IAA5BF,IAAgC,GAEhD,MAAMG,EAAOC,OAAOC,KAAKJ,GAEzB,GAAIE,EAAKG,OACP,IAAK,MAAMpB,KAAOiB,EAAM,C,IAIlBI,EAHJ,MAAMC,EAAQZ,EAAKC,KAAKY,SAASvB,GAC3BM,EAAQS,EAAUf,GAExB,GAAuB,WAAX,QAARqB,EAAAC,EAAM,UAAE,IAARD,OAAA,EAAAA,EAAUG,MAWK,aAAfF,EAAMG,KAIVH,EAAMhB,MAAQA,EAHZgB,EAAMI,QAAUpB,OAXhB,IAAK,MAAMqB,KAAKL,EACThB,EAAMsB,SAASD,EAAErB,SAGtBqB,EAAED,SAAU,E,CAgCpBhB,EAAKC,KAAKkB,iBAAiB,SAlBPC,IAClB,MAAMN,KAAEA,EAAIlB,MAAEA,EAAKoB,QAAEA,EAAOD,KAAEA,GAASK,EAAEC,O,IASdC,EAP3BjB,EAAY,IACPA,EACHS,CAACA,GACU,YAATA,EACIE,EACS,UAATF,EACAE,EACE,IAAI,IAAIO,IAAI,IAAoB,QAAfD,EAAAjB,EAAUS,UAAK,IAAfQ,IAAmB,GAAK1B,KACzCS,EAAUS,GAAMU,QAAOC,GAAMA,IAAO7B,IACtCA,GAGRP,EAAQqC,KA7Cc,cA6CQrB,EAAU,IC/C1C,MAAMsB,EAAO,CACXC,KAAM1B,SAASC,cAAc,kBAGzB0B,EAAa,EAACC,IAClBA,EAAGC,QACHA,EAAOC,KACPA,EAAIC,MACJA,EAAKC,MACLA,EAAKpB,KACLA,EAAIqB,SACJA,EAAQC,SACRA,KAEA,8CAjBWC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,0BAkBzC1B,qCACGqB,gCACLL,mCACGG,+CACaF,uCACRG,EAAMO,KAAK,mDACJL,8CACDJ,uBCvBxBU,EAAO,CACXzC,KAAMC,SAASC,cAAc,gB,IAKjBwC,EAAd,IAAIC,EAAkC,QAAxBD,EAAAtD,EAAQiB,IAHF,2BAGkB,IAAxBqC,IAA4B,GDsBxB,IAAAE,ECrBdD,EAAQlC,QAAU,IDqBJmC,ECpBND,EDoBgBjB,EAAKC,KAAKkB,UAFpB,CAAAD,GAASA,EAAME,IAAIlB,GAAYY,KAAK,IAEJO,CAAUH,ICa5DH,EAAKzC,KAAKkB,iBAAiB,UA9BNC,IACnBA,EAAE6B,iBAEF,MAAMC,EAAW,IAAIC,SAAS/B,EAAEgC,eAE1BC,EAAS,GAEf,IAAK,MAAOvC,EAAMlB,KAAUsD,EAASI,UAAW,CAC9C,IAAK1D,EAEH,YADA2D,MAAM,kCAGK,UAATzC,EAIJuC,EAAOvC,GAAQlB,EAHbyD,EAAOvC,GAAQ,IAAKuC,EAAOvC,IAAS,GAAKlB,E,CDM5B,IAAA4D,ECDjBH,EAAOtB,UAAYmB,EAAS5C,IAAI,WAEhCsC,EAAU,IAAIA,EAASS,GAEvBhE,EAAQqC,KA9BU,mBA8BQkB,GDHTY,ECKNH,EDJX1B,EAAKC,KAAK6B,mBAAmB,YAAa5B,EAAW2B,ICMrDnE,EAAQqE,OAjCc,eAkCtBtC,EAAEgC,cAAcO,OAAO","sources":["src/services/localStorage.js","src/js/form-event-input.js","src/js/markup.js","src/js/form-submit.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport default {\n  get,\n  save,\n  remove,\n};\n","import storage from '../services/localStorage.js';\n\nconst refs = {\n  form: document.querySelector('.add-member'),\n};\n\nconst MEMBER_INFO_KEY = 'member-info';\n\nlet savedDate = storage.get(MEMBER_INFO_KEY) ?? {};\n\nconst keys = Object.keys(savedDate);\n\nif (keys.length) {\n  for (const key of keys) {\n    const input = refs.form.elements[key];\n    const value = savedDate[key];\n\n    if (input[0]?.name === 'games') {\n      for (const i of input) {\n        if (!value.includes(i.value)) {\n          continue;\n        }\n        i.checked = true;\n      }\n\n      continue;\n    }\n\n    if (input.type === 'checkbox') {\n      input.checked = value;\n      continue;\n    }\n    input.value = value;\n  }\n}\n\nconst onInputForm = e => {\n  const { name, value, checked, type } = e.target;\n\n  savedDate = {\n    ...savedDate,\n    [name]:\n      name === 'consent'\n        ? checked\n        : name === 'games'\n        ? checked\n          ? [...new Set([...(savedDate[name] ?? []), value])]\n          : savedDate[name].filter(el => el !== value)\n        : value,\n  };\n\n  storage.save(MEMBER_INFO_KEY, savedDate);\n};\n\nrefs.form.addEventListener('input', onInputForm);\n","function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst refs = {\n  list: document.querySelector('.list-members'),\n};\n\nconst markupItem = ({\n  age,\n  consent,\n  data,\n  email,\n  games,\n  name,\n  nickname,\n  platform,\n}) =>\n  `<li class=\"item\" style=\"background-color: ${getRandomHexColor()}\">\n<p>Name: <span> ${name} </span></p>\n<p>Nickname: <span>${nickname} </span></p>\n<p>Age: <span>${age} </span></p>\n<p>email: <span> ${email}</span></p>\n<p>Consent to mailing: <span> ${consent}</span></p>\n<p>Lovely game: <span>${games.join(', ')} </span></p>\n<p>Main game platform: <span>${platform} </span></p>\n<p>Registration time: <span>${data} </span></p>\n</li>`;\n\nconst markupAll = items => items.map(markupItem).join('');\n\nconst renderAll = items => (refs.list.innerHTML = markupAll(items));\n\nconst renderItem = item =>\n  refs.list.insertAdjacentHTML('beforeend', markupItem(item));\n\nexport { renderAll, renderItem };\n","import storage from '../services/localStorage.js';\nimport { renderAll, renderItem } from './markup.js';\n\nconst refs = {\n  form: document.querySelector('.add-member'),\n};\nconst ALL_MEMBERS = 'all-members-info';\nconst MEMBER_INFO_KEY = 'member-info';\n\nlet members = storage.get(ALL_MEMBERS) ?? [];\nif (members.length >= 1) {\n  renderAll(members);\n}\n\nconst onSubmitForm = e => {\n  e.preventDefault();\n\n  const formData = new FormData(e.currentTarget);\n\n  const member = {};\n\n  for (const [name, value] of formData.entries()) {\n    if (!value) {\n      alert('all form fields must be filled');\n      return;\n    }\n    if (name === 'games') {\n      member[name] = [...(member[name] || []), value];\n      continue;\n    }\n    member[name] = value;\n  }\n  member.consent = !!formData.get('consent');\n\n  members = [...members, member];\n\n  storage.save(ALL_MEMBERS, members);\n\n  renderItem(member);\n\n  storage.remove(MEMBER_INFO_KEY);\n  e.currentTarget.reset();\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n"],"names":["$ba0250b82e3bc69e$export$2e2bcd8739ae039","key","JSON","parse","localStorage","getItem","error","value","setItem","stringify","removeItem","$8b5a5c16d1b4b0ac$var$refs","form","document","querySelector","$8b5a5c16d1b4b0ac$var$ref","$8b5a5c16d1b4b0ac$var$savedDate","get","$8b5a5c16d1b4b0ac$var$keys","Object","keys","length","$8b5a5c16d1b4b0ac$var$ref1","input","elements","name","type","checked","i","includes","addEventListener","e","target","_name","Set","filter","el","save","$263aef85a4d00bfb$var$refs","list","$263aef85a4d00bfb$var$markupItem","age","consent","data","email","games","nickname","platform","Math","floor","random","toString","join","$f07fe35799f78ffb$var$refs","$f07fe35799f78ffb$var$ref","$f07fe35799f78ffb$var$members","items","innerHTML","map","$263aef85a4d00bfb$var$markupAll","preventDefault","formData","FormData","currentTarget","member","entries","alert","item","insertAdjacentHTML","remove","reset"],"version":3,"file":"index.290d37e6.js.map"}